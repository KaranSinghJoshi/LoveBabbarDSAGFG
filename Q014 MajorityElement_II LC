https://leetcode.com/problems/majority-element-ii/

class Solution {
    public List<Integer> majorityElement(int[] nums) {
        int n = nums.length;
        int key = 0, buffer = 1;  // any two different initial values
        int keyCount = 0, bufferCount = 0;

        for (int e : nums) {
            if (e == key) {
                keyCount++;
            } else if (e == buffer) {
                bufferCount++;
            } else if (keyCount == 0) {
                key = e;
                keyCount = 1;
            } else if (bufferCount == 0) {
                buffer = e;
                bufferCount = 1;
            } else {
                keyCount--;
                bufferCount--;
            }
        }

        // Verify counts
        keyCount = 0;
        bufferCount = 0;
        for (int e : nums) {
            if (e == key) keyCount++;
            else if (e == buffer) bufferCount++;
        }

        List<Integer> result = new ArrayList<>();
        if (keyCount > n / 3) result.add(key);
        if (bufferCount > n / 3) result.add(buffer);

        return result;
    }
}
